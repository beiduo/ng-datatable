{"version":3,"sources":["index.js","template.js","component/ceil.js","component/group.header.js","component/group.js","component/row.js","component/th.filter.js","component/th.js"],"names":["global","angular","undefined","Controller","$timeout","$templateCache","_this","this","buildData","config","receive","data","buildGroup","dataFilter","dataSort","rows","buildPlainRows","bind","self","params","_typeof","Object","keys","forEach","key","col","cols","find","field","filterOptions","group","children","filter","child","entity","option","value","name","sortOptions","sort","a","b","order","sortBy","result","enableGrouping","map","el","obj","groupBy","parent","assign","Array","isArray","groupIn","row","dataSerialize","length","onSelectAll","isRowSelectable","allSelected","isSelected","onSort","onFetch","onParamsChange","getThClass","arr","alignRight","push","join","$onInit","colViews","templateUrls","table","th","thFilter","groupHeader","ceil","tableTemplateUrl","tableTemplate","put","theadCeilTemplateUrl","theadCeilTemplate","filterTemplateUrl","filterTemplate","groupHeaderTemplateUrl","groupHeaderTemplate","ceilTemplateUrl","ceilTemplate","console","error","sortDefaults","api","getRows","getSelections","selectAllRows","unselectAllRows","getRowsBy","condition","every","getParams","setData","setParams","ngDatatableThFilter","options","setSelected","getView","disableSelection","enableSelection","toggleSelection","disableGroupHeaderSelection","enableGroupHeaderSelection","disableSelectAll","enableSelectAll","apiRegister","log","app","module","e","$inject","component","bindings","template","controller","controllerAs","window","run","$filter","getTemplateUrl","urls","root","applyFilter","model","pieces","split","filterName","concat","slice","apply","require","ngDatatableRow","ngDatatableGroup","status","groupOpen","onGroupOpen","onGroupSelect","ngDatatable","directive","restrict","templateUrl","scope","bindToController","onRowSelect","getTdClass","$scope","$element","$document","handleClick","elem","trigger","parentNode","querySelector","target","isSelf","onClose","hasTouch","navigator","maxTouchPoints","$apply","ngDatatableTh","filterOpen","onfilterSelect","selected","$postLink","on","$destroy","off","onFilterTrigger"],"mappings":"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","file":"ng-datatable.min.js","sourcesContent":["(function (global, angular, undefined) {\n    \n    var app;\n\n    try {\n        app = angular.module('ng-datatable');\n    } catch (e) {\n        app = angular.module('ng-datatable', []);\n    }\n\n\n    // main component\n\n    function Controller ($timeout, $templateCache) {\n        let self = this;\n\n        this.buildData = (config, receive) => {\n            this.receive = receive;\n            this.config = config;\n            this.data = this.buildGroup(config, receive);\n            this.dataFilter();\n            this.dataSort();\n            this.rows = this.buildPlainRows();\n            \n        };\n\n        this.buildData = this.buildData.bind(this);\n\n        this.dataFilter = () => {\n            let self = this;\n            let params = this.config.params;\n\n            if (typeof params === 'object') {\n                Object.keys(params).forEach(key => {\n                    if (params[key] === null || params[key] === undefined || params[key] === '') {\n                        return;\n                    } \n                    let col = self.config.cols.find(col => col.field === key);\n                    if (col && typeof col.filterOptions === 'object') {\n                        self.data.rows.forEach(group => {\n                            group.children = group.children.filter(child =>\n                                child.entity[key] === col.filterOptions.find(option =>\n                                    option.value === params[key]\n                                ).name\n                            );\n                        });\n                    }\n                });\n            }\n        };\n\n        this.dataSort = () => {\n            let self = this;\n            // TODO now only compare numbers, needs more comparations\n            this.data.rows.forEach(group => {\n                let sortOptions = self.config.sortOptions;\n                group.children = group.children.sort((a, b) => {\n                    if (sortOptions.order === 'desc') {\n                        return b.entity[sortOptions.sortBy] - a.entity[sortOptions.sortBy];\n                    } else {\n                        return a.entity[sortOptions.sortBy] - b.entity[sortOptions.sortBy];\n                    }\n                });\n            });\n        };\n\n        this.buildGroup = (config, data) => {\n            let result = {};\n\n            // result.pagination = Object.assign({}, {\n            //     pageNo: 0,\n            //     pageSize: 0,\n            //     totalCount: 0,\n            //     totalRecord: 0\n            // }, data.pagination);\n\n            if (!config.enableGrouping) {\n                result.rows = [\n                    {\n                        children: data.rows.map(row => {\n                            return {\n                                entity: row\n                            };\n                        })\n                    }\n                ];\n            } else {\n                result.rows = data.rows.map(el => {\n                    let obj = {};\n\n                    if (typeof el[config.groupBy] === 'object') {\n                        obj.parent = Object.assign({}, el[config.groupBy]);\n                    } else {\n                        obj.parent = {\n                            name: el[config.groupBy]\n                        };\n                    }\n\n                    if (Array.isArray(el[config.groupIn])) {\n                        obj.children = el[config.groupIn].map(row => {\n                            return {\n                                entity: row\n                            };\n                        });\n                    }\n\n                    return obj;\n                });\n            }\n\n            if (typeof config.dataSerialize === 'function') {\n                result.rows.forEach(row => {\n                    row.children.forEach(child => {\n                        child.entity = config.dataSerialize(child.entity);\n                    });\n                });\n            }\n\n            return result;\n        };\n\n        this.buildPlainRows = () => {\n            let rows = [];\n            this.data.rows.forEach(group => {\n                group.children.forEach(child => {\n                    rows[rows.length] = child;\n                });\n            });\n            return rows;\n        };\n\n        this.onSelectAll = () => {\n            let isRowSelectable = this.config.isRowSelectable;\n            if (this.allSelected) {\n                this.rows.forEach(row => {\n                    if (typeof isRowSelectable !== 'function' || isRowSelectable(row)) {\n                        row.isSelected = true;\n                    }\n                });\n\n                this.data.rows.forEach(group => {\n                    group.isSelected = true;\n                });\n            } else {\n                this.rows.forEach(row => {\n                    if (typeof isRowSelectable !== 'function' || isRowSelectable(row)) {\n                        row.isSelected = false;\n                    }\n                });\n\n                this.data.rows.forEach(group => {\n                    group.isSelected = false;\n                });\n            }\n        };\n\n        this.onSort = (option) => {\n            let self = this;\n\n            if (typeof option !== 'object') {\n                return;\n            }\n\n            this.config.sortOptions = Object.assign({}, this.config.sortOptions, option);\n\n            if (typeof this.config.onFetch === 'function') {\n                this.config.onFetch(Object.assign(\n                    {},\n                    this.config.params,\n                    this.config.sortOptions\n                ));\n            } else {\n                this.dataSort();\n                this.rows = this.buildPlainRows();\n            }\n        };\n\n        this.onSort = this.onSort.bind(this);\n\n        this.onParamsChange = (field, option) => {\n            if (typeof field === 'string') {\n                this.config.params[field] = option ? option.value : null;\n            }\n\n            if (typeof this.config.onFetch === 'function') {\n                this.config.onFetch(Object.assign(\n                    {},\n                    this.config.params,\n                    this.config.sortOptions\n                ));\n            } else {\n                this.buildData(this.config, this.receive);\n            }\n        };\n\n        this.onParamsChange = this.onParamsChange.bind(this);\n\n        this.getThClass = (col) => {\n            let arr = [];\n            if (col.alignRight) {\n                arr.push('align-right');\n            }\n            arr.push('col-' + col.field + '-th');\n            return arr.join(' ');\n        };\n\n        this.$onInit = () => {\n            let self = this;\n\n            this.colViews = {};\n\n            // set templates\n\n            this.templateUrls = {\n                table: 'ng-datatable-table.html',\n                th: 'ng-datatable-th.html',\n                thFilter: 'ng-datatable-th-filter.html',\n                groupHeader: 'ng-datatable-group-header.html',\n                ceil: 'ng-datatable-ceil.html'\n            };\n\n            // tableTemplateUrl\n\n            if (typeof this.config.tableTemplateUrl === 'string') {\n                this.templateUrls.table = this.config.tableTemplateUrl;\n            }\n\n            if (typeof this.config.tableTemplate === 'string') {\n                $templateCache.put('ng-datatable-custom-table', this.config.tableTemplate);\n\n                this.templateUrls.table =  'ng-datatable-custom-table';\n            }\n\n            // theadCeilTemplateUrl\n\n            if (typeof this.config.theadCeilTemplateUrl === 'string') {\n                this.templateUrls.th = this.config.theadCeilTemplateUrl;\n            }\n\n            if (typeof this.config.theadCeilTemplate === 'string') {\n                $templateCache.put('ng-datatable-custom-th', this.config.theadCeilTemplate);\n\n                this.templateUrls.th =  'ng-datatable-custom-th';\n            }\n\n            // filterTemplateUrl\n\n            if (typeof this.config.filterTemplateUrl === 'string') {\n                this.templateUrls.thFilter = this.config.filterTemplateUrl;\n            }\n\n            if (typeof this.config.filterTemplate === 'string') {\n                $templateCache.put('ng-datatable-custom-th-filter', this.config.filterTemplate);\n\n                this.templateUrls.thFilter =  'ng-datatable-custom-th-filter';\n            }\n\n            // groupHeaderTemplateUrl\n\n            if (typeof this.config.groupHeaderTemplateUrl === 'string') {\n                this.templateUrls.groupHeader = this.config.groupHeaderTemplateUrl;\n            }\n\n            if (typeof this.config.groupHeaderTemplate === 'string') {\n                $templateCache.put('ng-datatable-custom-group-header', this.config.groupHeaderTemplate);\n\n                this.templateUrls.groupHeader =  'ng-datatable-custom-group-header';\n            }\n\n            // ceilTemplateUrl\n\n            if (typeof this.config.ceilTemplateUrl === 'string') {\n                this.templateUrls.ceil = this.config.ceilTemplateUrl;\n            }\n\n            if (typeof this.config.ceilTemplate === 'string') {\n                $templateCache.put('ng-datatable-custom-ceil', this.config.ceilTemplate);\n\n                this.templateUrls.ceil =  'ng-datatable-custom-ceil';\n            }\n\n            // template of columns\n\n            this.config.cols.forEach(col => {\n                if (typeof col.field !== 'string') {\n                    console.error('each column must has a field property, otherwise some functions might not work. if this column doesn\\'t connect with any field in your data, just use any radom field name.');\n                    return;\n                }\n\n                if (typeof col.theadCeilTemplateUrl === 'string') {\n                    self.templateUrls['th_' + col.field] = col.theadCeilTemplateUrl;\n                }\n\n                if (typeof col.filterTemplateUrl === 'string') {\n                    self.templateUrls['filter_' + col.field] = col.filterTemplateUrl;\n                }\n\n                if (typeof col.ceilTemplateUrl === 'string') {\n                    self.templateUrls['ceil_' + col.field] = col.ceilTemplateUrl;\n                }\n\n                if (typeof col.theadCeilTemplate === 'string') {\n                    $templateCache.put('ng-datatable-th_' + col.field, col.theadCeilTemplate);\n                    self.templateUrls['th_' + col.field] = 'ng-datatable-th_' + col.field;\n                }\n\n                if (typeof col.filterTemplate === 'string') {\n                    $templateCache.put('ng-datatable-th-filter_' + col.field, col.filterTemplate);\n                    self.templateUrls['thFilter_' + col.field] = 'ng-datatable-th-filter_' + col.field;\n                }\n\n                if (typeof col.ceilTemplate === 'string') {\n                    $templateCache.put('ng-datatable-ceil_' + col.field, col.ceilTemplate);\n                    self.templateUrls['ceil_' + col.field] = 'ng-datatable-ceil_' + col.field;\n                }\n            });\n\n            // grouping options\n\n            if (this.config.enableGrouping) {\n                this.config = Object.assign({}, {\n                    groupBy: 'parent',\n                    groupIn: 'chilren'\n                }, this.config);\n            }\n\n            // sorting options\n\n            this.config.sortOptions = Object.assign({}, this.config.sortDefaults);\n            \n            // build data\n            \n            this.buildData(this.config, this.receive);\n\n            // console.log(this.rows);\n\n            // $timeout(() => {\n            //     this.data.rows[0].children[0].entity.amount = 324;\n            //     console.log(this.rows);\n            // }, 5000);\n\n            // console.log(this.data);\n\n            this.api = {\n                getRows: () => {\n                    return this.rows;\n                },\n                getSelections: () => {\n                    return this.rows.filter(row => row.isSelected);\n                },\n                selectAllRows: () => {\n                    this.allSelected = true;\n                    this.onSelectAll();\n                },\n                unselectAllRows: () => {\n                    this.allSelected = false;\n                    this.onSelectAll();\n                },\n                getRowsBy: (condition) => {\n                    return this.rows.filter(row =>\n                        Object.keys(condition).every(key =>\n                            condition[key] === row.entity[key]\n                        )\n                    );\n                },\n                getParams: () => {\n                    return this.config.params;\n                },\n                setData: (data) => {\n                    this.buildData(this.config, data);\n                },\n                setParams: (params) => {\n                    let self = this;\n                    if (typeof params !== 'object') {\n                        console.error('setParams method requires an object as its first parameter');\n                        return;\n                    }\n                    this.config.params = Object.assign({}, this.config.params, params);\n                    this.onParamsChange();\n\n                    Object.keys(params).forEach(key => {\n                        let result;\n                        if (params[key] === null || params[key] === undefined || params[key] === '') {\n                            result = null;\n                        } else {\n                            result = self.colViews[key].ngDatatableThFilter.options.find(option => option.value === params[key]);\n                        }\n                        self.colViews[key].ngDatatableThFilter.setSelected(result);\n                    });\n                },\n                getView: () => {\n                    return this;\n                },\n                disableSelection: () => {\n                    this.config.enableSelection = false;\n                },\n                enableSelection: () => {\n                    this.config.enableSelection = true;\n                },\n                toggleSelection: () => {\n                    this.config.enableSelection = !this.config.enableSelection;\n                },\n                disableGroupHeaderSelection: () => {\n                    this.config.enableGroupHeaderSelection = false;\n                },\n                enableGroupHeaderSelection: () => {\n                    this.config.enableGroupHeaderSelection = true;\n                },\n                disableSelectAll: () => {\n                    this.config.enableSelectAll = false;\n                },\n                enableSelectAll: () => {\n                    this.config.enableSelectAll = true;\n                }\n            };\n\n            Object.keys(this.api).forEach(key => {\n                this.api[key] = this.api[key].bind(self);\n            });\n\n            if (typeof this.config.apiRegister === 'function') {\n                this.config.apiRegister(this.api);\n            }\n        };\n\n        console.log(this);\n\n        \n    }\n\n    Controller.$inject = ['$timeout', '$templateCache'];\n\n    app.component('ngDatatable', {\n        bindings: {\n            config: '<',\n            receive: '<'\n        },\n        template: '<ng-include src=\"vm.templateUrls[\\'table\\']\"></ng-include>',\n        controller: Controller,\n        controllerAs: 'vm'\n    });\n}(window, window.angular));","(function(module) {\ntry {\n  module = angular.module('ng-datatable');\n} catch (e) {\n  module = angular.module('ng-datatable', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('ng-datatable-ceil.html',\n    '<div class=\"ceil\">{{vm.applyFilter(vm.row.entity[vm.field], vm.col.filter) || \\'-\\'}}</div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('ng-datatable');\n} catch (e) {\n  module = angular.module('ng-datatable', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('ng-datatable-group-header.html',\n    '<div class=\"ceil\"><div class=\"group-caption\">{{vm.receive.name}}</div><a href=\"javascript:;\" class=\"triangle group-trigger\" ng-class=\"{\\'group-trigger-open\\': vm.ngDatatableGroup.status.groupOpen}\">收起</a></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('ng-datatable');\n} catch (e) {\n  module = angular.module('ng-datatable', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('ng-datatable-group.html',\n    '<tr class=\"group-header\" ng-if=\"vm.group.parent\"><td class=\"select-ceil\" ng-if=\"vm.root.config.enableSelection\"><div class=\"ceil\" ng-if=\"vm.root.config.enableGroupHeaderSelection\"><label class=\"ng-datatable-check\"><input type=\"checkbox\" ng-model=\"vm.group.isSelected\" ng-click=\"vm.onGroupSelect()\"> <span class=\"text\"></span></label></div></td><td colspan=\"{{vm.root.config.cols.length}}\"><ng-datatable-group-header ng-click=\"vm.onGroupOpen()\" receive=\"vm.group.parent\" root=\"vm.root\"></ng-datatable-group-header></td></tr><tr ng-datatable-row=\"\" ng-repeat=\"el in vm.group.children\" row=\"el\" group=\"vm.group\" ng-show=\"vm.status.groupOpen\" root=\"vm.root\"></tr>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('ng-datatable');\n} catch (e) {\n  module = angular.module('ng-datatable', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('ng-datatable-row.html',\n    '<td class=\"select-ceil\" ng-if=\"vm.root.config.enableSelection\"><div class=\"ceil\"><label class=\"ng-datatable-check\"><input type=\"checkbox\" ng-disabled=\"!vm.root.config.isRowSelectable(vm.row)\" ng-model=\"vm.row.isSelected\" ng-change=\"vm.onRowSelect()\"> <span class=\"text\"></span></label></div></td><td ng-repeat=\"el in vm.root.config.cols\" data-ref=\"{{el.field}}\" ng-class=\"vm.getTdClass(el)\"><ng-datatable-ceil field=\"el.field\" row=\"vm.row\" col=\"el\" root=\"vm.root\"></ng-datatable-ceil></td>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('ng-datatable');\n} catch (e) {\n  module = angular.module('ng-datatable', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('ng-datatable-table.html',\n    '<table class=\"maintable\"><thead><tr><th class=\"select-ceil\" ng-if=\"vm.config.enableSelection\"><div class=\"ceil\" ng-if=\"vm.config.enableSelectAll\"><label class=\"ng-datatable-check\"><input type=\"checkbox\" ng-model=\"vm.allSelected\" ng-change=\"vm.onSelectAll()\"> <span class=\"text\"></span></label></div></th><th ng-repeat=\"el in vm.config.cols\" data-ref=\"el.field\" ng-class=\"vm.getThClass(el)\"><ng-datatable-th col=\"el\" config=\"vm.config\" root=\"vm\"></ng-datatable-th></th></tr></thead><tbody ng-datatable-group=\"\" ng-repeat=\"el in vm.data.rows\" group=\"el\" root=\"vm\"></tbody></table>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('ng-datatable');\n} catch (e) {\n  module = angular.module('ng-datatable', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('ng-datatable-th-filter.html',\n    '<ul class=\"filter-options\"><li ng-class=\"{ current: !vm.status.selected }\"><a href=\"javascript:;\" ng-click=\"vm.onfilterSelect(null)\">全部</a></li><li ng-repeat=\"option in vm.options track by $index\" ng-class=\"{ current: option == vm.status.selected }\"><a href=\"javascript:;\" ng-click=\"vm.onfilterSelect(option)\">{{option.name}}</a></li></ul>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('ng-datatable');\n} catch (e) {\n  module = angular.module('ng-datatable', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('ng-datatable-th.html',\n    '<div class=\"thead-ceil with-filter\"><div class=\"title\">{{vm.col.displayName}}</div><a href=\"javascript:;\" class=\"sort\" ng-if=\"vm.col.enableSort\" ng-class=\"{ \\'sort-asc\\': vm.config.sortOptions.sortBy === vm.col.field && vm.config.sortOptions.order === \\'asc\\', \\'sort-desc\\': vm.config.sortOptions.sortBy === vm.col.field && vm.config.sortOptions.order === \\'desc\\' }\" ng-click=\"vm.onSort()\"><span class=\"text\">排序</span></a> <a href=\"javascript:;\" class=\"triangle filter-trigger\" ng-class=\"{ \\'filter-trigger-open\\': vm.status.filterOpen }\" ng-click=\"vm.onFilterTrigger()\" ng-if=\"vm.col.enableFilter\">过滤</a><ng-datatable-th-filter ng-class=\"{show: vm.status.filterOpen}\" ng-if=\"vm.col.enableFilter\" options=\"vm.col.filterOptions\" col=\"vm.col\" root=\"vm.root\"></ng-datatable-th-filter></div>');\n}]);\n})();\n","(function (global, angular, undefined) {\n    \n    let app;\n\n    try {\n        app = angular.module('ng-datatable');\n    } catch (e) {\n        app = angular.module('ng-datatable', []);\n    }\n\n    function Controller (\n        $filter\n    ) {\n        let self = this;\n\n        this.getTemplateUrl = () => {\n            let urls = this.root.templateUrls;\n\n            return urls['ceil_' + this.col.field] || urls.ceil;\n        };\n\n        this.applyFilter = (model, filter) => {\n            if(filter){\n                let pieces = filter.split(':');\n                let filterName = pieces[0];\n                let params = [model];\n\n                if(pieces.length > 1){\n                    params = params.concat(pieces.slice(1));\n                }\n                return $filter(filterName).apply(this,params);\n            }else{\n                return model;\n            }\n        };\n\n        // this.$onInit = function () {\n        //     this.ngDatatableRow.childViews[this.field] = this;\n        // };\n\n        \n    }\n\n    Controller.$inject = [\n        '$filter'\n    ];\n\n    app.component('ngDatatableCeil', {\n        bindings: {\n            row: '<',\n            field: '<',\n            col: '<',\n            root: '<'\n        },\n        require: {\n            ngDatatableRow: '^'\n        },\n        template: '<ng-include src=\"vm.getTemplateUrl()\"></ng-include>',\n        controller: Controller,\n        controllerAs: 'vm'\n    });\n}(window, window.angular));","(function (global, angular, undefined) {\n    \n    let app;\n\n    try {\n        app = angular.module('ng-datatable');\n    } catch (e) {\n        app = angular.module('ng-datatable', []);\n    }\n\n    function Controller () {\n        let self = this;\n        // this.$onInit = () => {\n        //     this.ngDatatableGroup.childViews.groupHeader = this;\n        // };\n    }\n\n    app.component('ngDatatableGroupHeader', {\n        bindings: {\n            receive: '<',\n            root: '<'\n        },\n        require: {\n            ngDatatableGroup: '^'\n        },\n        template: '<ng-include src=\"vm.root.templateUrls[\\'groupHeader\\']\"></ng-include>',\n        controller: Controller,\n        controllerAs: 'vm'\n    });\n}(window, window.angular));","(function (global, angular, undefined) {\n    \n    let app;\n\n    try {\n        app = angular.module('ng-datatable');\n    } catch (e) {\n        app = angular.module('ng-datatable', []);\n    }\n\n    function Controller () {\n        let self = this;\n\n        // this.childViews = {\n        //     rows: []\n        // };\n\n        this.status = {\n            groupOpen: true\n        };\n\n        this.onGroupOpen = () => {\n            this.status.groupOpen = this.status.groupOpen ? false : true;\n        };\n\n        this.onGroupOpen = this.onGroupOpen.bind(this);\n\n        this.onGroupSelect = () => {\n            let isRowSelectable = this.root.config.isRowSelectable;\n\n            if (!this.group.isSelected) {\n                this.root.allSelected = false;\n\n                this.group.children.forEach(child => {\n                    if (typeof isRowSelectable !== 'function' || isRowSelectable(child)) {\n                        child.isSelected = false;\n                    }\n                });\n            } else {\n                this.group.children.forEach(child => {\n                    if (typeof isRowSelectable !== 'function' || isRowSelectable(child)) {\n                        child.isSelected = true;\n                    }\n                });\n            }\n        };\n\n        this.$onInit = () => {\n            // this.ngDatatable.childViews.groups.push(this);\n            this.root = this.ngDatatable;\n        };\n    }\n\n    app.directive('ngDatatableGroup', function () {\n        return {\n            restrict: 'EA',\n            templateUrl: 'ng-datatable-group.html',\n            scope: {\n                group: '='\n            },\n            require: {\n                ngDatatable: '^'\n            },\n            controller: Controller,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n    });\n}(window, window.angular));","(function (global, angular, undefined) {\n    \n    let app;\n\n    try {\n        app = angular.module('ng-datatable');\n    } catch (e) {\n        app = angular.module('ng-datatable', []);\n    }\n\n    function Controller () {\n        var self = this;\n\n        // this.childViews = {};\n\n        this.onRowSelect = () => {\n            if (!this.row.isSelected) {\n                this.root.allSelected = false;\n                this.group.isSelected = false;\n            }\n        };\n\n        this.getTdClass = (col) => {\n            let arr = [];\n            if (col.alignRight) {\n                arr.push('align-right');\n            }\n            arr.push('col-' + col.field + '-td');\n            return arr.join(' ');\n        };\n        \n        // this.$onInit = function () {\n        //     this.ngDatatableGroup.childViews.rows.push(this);\n        // };\n    }\n\n    app.directive('ngDatatableRow', function () {\n        return {\n            restrict: 'EA',\n            templateUrl: 'ng-datatable-row.html',\n            scope: {\n                row: '=',\n                group: '=',\n                root: '='\n            },\n            require: {\n                ngDatatableGroup: '^'\n            },\n            controller: Controller,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n    });\n}(window, window.angular));","(function (global, angular, undefined) {\n    \n    let app;\n\n    try {\n        app = angular.module('ng-datatable');\n    } catch (e) {\n        app = angular.module('ng-datatable', []);\n    }\n\n    function Controller (\n        $scope,\n        $element,\n        $document,\n        $timeout\n    ) {\n        let self = this;\n\n        this.status = {};\n\n        this.getTemplateUrl = () => {\n            let urls = this.root.templateUrls;\n\n            return urls['thFilter_' + this.col.field] || urls.thFilter;\n        };\n\n        function handleClick (e) {\n            let elem = $element[0];\n            let trigger = elem.parentNode.querySelector('a.filter-trigger');\n            let target = e.target;\n            let isSelf = false;\n\n            if (!e || !target || !elem) {\n                return;\n            }\n\n            for (; target; target = target.parentNode) {\n                if (target === elem || target === trigger) {\n                    isSelf = true;\n                    break;\n                }\n            }\n\n            if (!isSelf) {\n                self.onClose();\n            }\n        }\n\n        function hasTouch () {\n            return 'ontouchstart' in window || navigator.maxTouchPoints;\n        }\n\n        this.onClose = () => {\n            let self = this;\n            $scope.$apply(() => {\n                self.ngDatatableTh.status.filterOpen = false;\n            });\n        };\n\n        this.onfilterSelect = (option) => {\n            \n            this.status.selected = option;\n            this.ngDatatableTh.status.filterOpen = false;\n\n            this.root.onParamsChange(this.col.field, option);\n        };\n\n        this.setSelected = (selected) => {\n            this.status.selected = selected;\n        };\n\n        this.setSelected = this.setSelected.bind(this);\n\n        this.$onInit = () => {\n            let self = this;\n\n            this.status.selected = null;\n\n            let params = this.root.config.params;\n\n            Object.keys(params).forEach(key => {\n                if (key === self.col.field) {\n                    self.status.selected = self.options.find(option => option.value === params[key]);\n                }\n            });\n\n            this.ngDatatableTh.ngDatatableThFilter = this;\n        };\n\n        this.$postLink = () => {\n            $timeout(() => {\n                $document.on('click', handleClick);\n\n                if (hasTouch) {\n                    $document.on('touchstart', handleClick);\n                }\n            }, 0);\n        };\n\n        this.$destroy = () => {\n            $document.off('click', handleClick);\n\n            if (hasTouch) {\n                $document.off('touchstart', handleClick);\n            }\n        };\n    }\n\n    Controller.$inject = [\n        '$scope',\n        '$element',\n        '$document',\n        '$timeout'\n    ];\n\n    app.component('ngDatatableThFilter', {\n        bindings: {\n            options: '<',\n            col: '<',\n            root: '<'\n        },\n        require: {\n            ngDatatableTh: '^'\n        },\n        template: '<ng-include src=\"vm.getTemplateUrl()\"></ng-include>',\n        controller: Controller,\n        controllerAs: 'vm'\n    });\n}(window, window.angular));","(function (global, angular, undefined) {\n    \n    let app;\n\n    try {\n        app = angular.module('ng-datatable');\n    } catch (e) {\n        app = angular.module('ng-datatable', []);\n    }\n\n    function Controller () {\n        let self = this;\n\n        this.status = {};\n\n        // get template url\n\n        this.getTemplateUrl = () => {\n            let urls = this.root.templateUrls;\n\n            return urls['th_' + this.col.field] || urls.th;\n        };\n        \n        this.onFilterTrigger = () => {\n            this.status.filterOpen = this.status.filterOpen ? false : true;\n        };\n\n        this.onFilterTrigger = this.onFilterTrigger.bind(this);\n\n        this.onSort = () => {\n            let obj = {};\n\n            if (this.config.sortOptions.sortBy !== this.col.field) {\n                obj = {\n                    sortBy: this.col.field,\n                    order: 'asc'\n                };\n            } else if (this.config.sortOptions.order === 'asc') {\n                obj = {\n                    sortBy: this.col.field,\n                    order: 'desc'\n                };\n            } else {\n                obj = this.config.sortDefaults;\n            }\n\n            this.root.onSort(obj);\n        };\n\n        this.$onInit = () => {\n            this.root = this.ngDatatable;\n            this.root.colViews[this.col.field] = this;\n        };\n        \n    }\n\n    app.component('ngDatatableTh', {\n        bindings: {\n            col: '<',\n            config: '<'\n        },\n        require: {\n            ngDatatable: '^'\n        },\n        template: '<ng-include src=\"vm.getTemplateUrl()\"></ng-include>',\n        controller: Controller,\n        controllerAs: 'vm'\n    });\n}(window, window.angular));"]}